-- Drop tables to ensure all old data is removed
DROP TABLE IF EXISTS Booking CASCADE;
DROP TABLE IF EXISTS Room CASCADE;
DROP TABLE IF EXISTS Guest CASCADE;
DROP TABLE IF EXISTS Hotel CASCADE;

-- Re-create tables as before
-- Hotel table
CREATE TABLE Hotel (
    hotelNo SERIAL PRIMARY KEY,
    hotelName VARCHAR(50) NOT NULL,
    city VARCHAR(50) NOT NULL
);

-- Room table
CREATE TABLE Room (
    roomNo INT NOT NULL,
    hotelNo INT NOT NULL,
    type VARCHAR(20) NOT NULL,
    price DECIMAL(8, 2) NOT NULL,
    PRIMARY KEY (roomNo, hotelNo),
    FOREIGN KEY (hotelNo) REFERENCES Hotel(hotelNo)
);

-- Guest table
CREATE TABLE Guest (
    guestNo SERIAL PRIMARY KEY,
    guestName VARCHAR(50) NOT NULL,
    guestAddress VARCHAR(100)
);

-- Booking table
CREATE TABLE Booking (
    hotelNo INT NOT NULL,
    guestNo INT NOT NULL,
    dateFrom DATE NOT NULL,
    dateTo DATE NOT NULL,
    roomNo INT NOT NULL,
    PRIMARY KEY (hotelNo, guestNo, dateFrom),
    FOREIGN KEY (hotelNo) REFERENCES Hotel(hotelNo),
    FOREIGN KEY (guestNo) REFERENCES Guest(guestNo),
    FOREIGN KEY (roomNo, hotelNo) REFERENCES Room(roomNo, hotelNo)
);

-- Re-run the INSERT statements to add data
-- Hotel data
INSERT INTO Hotel (hotelName, city) VALUES 
('Grand Hotel', 'New York'),
('Sea Breeze', 'Miami'),
('Mountain Inn', 'Denver'),
('Desert Oasis', 'Phoenix'),
('City Center', 'Chicago'),
('Lake House', 'Minneapolis'),
('Sunset Resort', 'Los Angeles'),
('Maple Lodge', 'Vermont'),
('River Park', 'San Francisco'),
('Sky High', 'Seattle');

-- Room data with unique roomNo and hotelNo combinations
INSERT INTO Room (roomNo, hotelNo, type, price) VALUES 
(101, 1, 'Single', 120.00),
(102, 1, 'Double', 150.00),
(103, 2, 'Suite', 200.00),
(104, 2, 'Single', 100.00),
(105, 3, 'Double', 160.00),
(106, 3, 'Single', 130.00),
(107, 4, 'Suite', 250.00),
(108, 4, 'Double', 180.00),
(109, 5, 'Single', 110.00),
(110, 5, 'Double', 140.00);

-- Guest data
INSERT INTO Guest (guestName, guestAddress) VALUES 
('Alice Johnson', '123 Maple St, New York'),
('Bob Smith', '456 Pine St, Miami'),
('Carol White', '789 Cedar Ave, Denver'),
('Dave Green', '101 Elm St, Phoenix'),
('Eve Black', '202 Oak St, Chicago'),
('Frank Blue', '303 Birch Rd, Minneapolis'),
('Grace Brown', '404 Ash Blvd, Los Angeles'),
('Hank Grey', '505 Spruce Ln, Vermont'),
('Ivy Purple', '606 Willow Way, San Francisco'),
('Jack Orange', '707 Poplar Ct, Seattle');

-- Booking data, matching roomNo and hotelNo pairs in Room table
INSERT INTO Booking (hotelNo, guestNo, dateFrom, dateTo, roomNo) VALUES 
(1, 1, '2024-01-10', '2024-01-15', 101),
(1, 2, '2024-02-10', '2024-02-12', 102),
(2, 3, '2024-03-15', '2024-03-18', 103),
(2, 4, '2024-04-05', '2024-04-10', 104),
(3, 5, '2024-05-01', '2024-05-07', 105),
(3, 6, '2024-06-10', '2024-06-15', 106),
(4, 7, '2024-07-20', '2024-07-25', 107),
(4, 8, '2024-08-10', '2024-08-12', 108),
(5, 9, '2024-09-01', '2024-09-05', 109),
(5, 10, '2024-10-10', '2024-10-15', 110);



--All code for HW8 Questions included

--Question A
SELECT COUNT(*) AS number_of_hotels FROM Hotel;

--Question B
SELECT AVG(price) AS average_room_price FROM Room;

--Question C
SELECT h.hotelName, COUNT(r.roomNo) AS number_of_rooms
FROM Room r
JOIN Hotel h ON r.hotelNo = h.hotelNo
WHERE h.city = 'Chicago'
GROUP BY h.hotelName;

--Question D
SELECT roomNo, hotelNo, type, price
FROM Room
WHERE type IN ('Double', 'Family') AND price < 300.00
ORDER BY price DESC;

--Question E 
--Output without Subquery
SELECT R.roomNo, R.type, R.price
FROM Room R
JOIN Hotel H ON R.hotelNo = H.hotelNo
WHERE H.hotelName = 'Sea Breeze' AND H.city = 'Miami';

--Output without Subquery (previous assignment)
SELECT roomNo, type, price
FROM Room
WHERE hotelNo = (SELECT hotelNo FROM Hotel WHERE hotelName = 'Sea Breeze' AND city = 'Miami');
